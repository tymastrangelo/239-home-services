name: Build and deploy to GitHub Pages

on:
  push:
    branches: [ main ]

# Give the workflow the permissions it needs to push to the repository
permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          # ensure the token (GITHUB_TOKEN) is available to push from later steps
          persist-credentials: true

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build
        run: npm run build

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./dist
          publish_branch: gh-pages

      - name: Ensure GitHub Pages source is set to gh-pages (try PAT then token)
        run: |
          echo "Attempting to set Pages source to gh-pages via GitHub API"
          if [ -n "${{ secrets.GH_PAGES_PAT }}" ]; then
            echo "Using GH_PAGES_PAT secret"
            TOKEN="${{ secrets.GH_PAGES_PAT }}"
          else
            echo "GH_PAGES_PAT not provided; falling back to GITHUB_TOKEN (may be restricted)"
            TOKEN="${{ secrets.GITHUB_TOKEN }}"
          fi
          resp=$(curl -s -o /tmp/pages_resp -w "%{http_code}" -X PUT \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer $TOKEN" \
            https://api.github.com/repos/${{ github.repository }}/pages \
            -d '{"source":{"branch":"gh-pages","path":"/"}}')
          echo "GitHub API response code: $resp"
          if [ "$resp" -ge 400 ]; then
            echo "Could not set Pages source (HTTP $resp). Dumping response and continuing to fallback."
            cat /tmp/pages_resp || true
          else
            echo "Pages source set or already configured."
          fi

      - name: Fallback publish to main root (overwrite index.html and assets)
        if: always()
        run: |
          echo "Publishing dist to main branch root as fallback"
          # Checkout main branch (credentials persisted by actions/checkout earlier)
          git fetch origin main
          git checkout main
          # Configure git identity so commits succeed in the runner
          git config user.email "${{ github.actor }}@users.noreply.github.com"
          git config user.name "${{ github.actor }}"
          # Remove only index.html and assets/ to avoid touching other repo files
          git rm -f index.html || true
          git rm -rf assets || true
          # Copy dist output into repo root
          cp -r ./dist/* ./
          # Stage changes
          git add index.html assets || true
          if git diff --staged --quiet; then
            echo "No changes to main branch root needed"
          else
            git commit -m "chore(ci): publish built site to main root (fallback)"
            echo "Pushing updates to origin/main"
            git push origin main
          fi
